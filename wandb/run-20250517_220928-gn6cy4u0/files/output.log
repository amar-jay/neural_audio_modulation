[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('4-167063-B-11.wav', '1-7057-A-12.wav', '3-152020-C-36.wav', '5-179860-A-43.wav', '5-201172-A-46.wav', '5-234335-A-23.wav', '4-172732-A-36.wav', '1-59324-A-21.wav', '1-76831-E-42.wav', '3-144106-A-32.wav', '1-26177-A-43.wav', '2-91912-B-33.wav', '1-67033-A-37.wav', '5-156999-A-19.wav', '4-200330-A-6.wav', '5-193339-A-10.wav', '1-9886-A-49.wav', '4-161303-B-5.wav', '3-155234-A-43.wav', '5-179866-A-43.wav', '2-117615-D-48.wav', '4-161099-A-47.wav', '3-119120-B-48.wav', '4-121532-A-42.wav', '3-160119-A-15.wav', '2-50667-A-41.wav', '1-211527-C-20.wav', '3-163459-A-0.wav', '1-27724-A-1.wav', '1-56234-A-9.wav', '3-132747-A-26.wav', '2-28314-A-12.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('5-209833-A-38.wav', '5-221567-A-22.wav', '1-79113-A-5.wav', '3-197408-C-8.wav', '4-189838-A-22.wav', '1-80841-A-13.wav', '3-177082-A-22.wav', '1-62509-A-45.wav', '4-232495-A-6.wav', '1-21421-A-46.wav', '4-194246-A-13.wav', '5-207836-A-29.wav', '4-132810-A-26.wav', '4-255371-A-47.wav', '1-16746-A-15.wav', '5-160614-A-48.wav', '2-85945-A-18.wav', '2-102414-B-17.wav', '1-211527-A-20.wav', '1-56234-A-9.wav', '5-204352-B-13.wav', '1-51037-A-16.wav', '1-62850-A-38.wav', '5-251962-A-47.wav', '2-141682-A-36.wav', '1-45641-A-27.wav', '5-219044-A-46.wav', '1-58792-A-24.wav', '4-205526-A-23.wav', '3-152007-A-20.wav', '4-171706-A-23.wav', '5-220939-A-27.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('2-102414-D-17.wav', '2-117615-C-48.wav', '1-62849-A-38.wav', '1-20545-A-28.wav', '2-71162-A-1.wav', '3-98869-A-46.wav', '2-119161-A-8.wav', '4-154793-A-4.wav', '3-104958-A-12.wav', '5-103416-A-2.wav', '4-90014-A-42.wav', '2-108767-A-9.wav', '3-156393-A-35.wav', '1-18074-A-6.wav', '4-207116-A-23.wav', '1-84705-A-39.wav', '3-112397-A-9.wav', '4-191246-A-7.wav', '2-102567-D-35.wav', '3-110913-C-7.wav', '4-204115-A-39.wav', '5-201172-A-46.wav', '2-59566-A-46.wav', '3-197435-B-22.wav', '5-250026-A-30.wav', '3-100024-B-27.wav', '3-155579-A-14.wav', '5-208810-A-11.wav', '1-30830-A-24.wav', '4-196672-A-8.wav', '5-244315-A-6.wav', '2-91912-B-33.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('4-253649-A-6.wav', '2-103423-A-3.wav', '4-188191-B-29.wav', '1-88409-A-45.wav', '2-123712-A-33.wav', '1-36402-A-23.wav', '4-185613-A-32.wav', '3-135469-A-35.wav', '2-37806-A-40.wav', '3-165856-A-41.wav', '1-105224-A-22.wav', '4-188191-A-29.wav', '4-102844-A-49.wav', '4-143118-B-7.wav', '5-203739-A-10.wav', '5-219379-B-11.wav', '4-198025-A-23.wav', '4-130891-A-7.wav', '5-221593-A-21.wav', '4-144468-B-27.wav', '3-152007-E-20.wav', '5-9032-A-0.wav', '3-141559-A-45.wav', '1-88409-B-45.wav', '4-175855-A-43.wav', '3-148330-A-21.wav', '3-170377-A-38.wav', '4-132839-A-33.wav', '2-106881-A-39.wav', '1-18631-A-23.wav', '3-118658-B-41.wav', '3-103051-B-19.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('5-219242-B-37.wav', '2-82274-B-5.wav', '4-181865-A-38.wav', '5-244315-C-6.wav', '3-151273-A-35.wav', '2-66637-A-20.wav', '4-125071-A-19.wav', '2-102414-A-17.wav', '5-260164-A-23.wav', '3-151206-A-23.wav', '4-80761-A-42.wav', '3-197408-C-8.wav', '1-51805-D-33.wav', '1-30344-A-0.wav', '4-164661-A-12.wav', '3-169907-A-29.wav', '1-46274-A-18.wav', '1-84393-A-32.wav', '2-68391-B-41.wav', '1-19898-C-41.wav', '3-177083-A-22.wav', '4-150364-B-46.wav', '3-170015-A-0.wav', '3-123086-A-28.wav', '3-145719-A-17.wav', '4-133895-A-7.wav', '2-52085-A-4.wav', '5-213077-A-11.wav', '1-202111-A-3.wav', '5-177957-C-40.wav', '2-51630-A-49.wav', '3-134049-A-1.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('1-101404-A-34.wav', '4-188703-B-8.wav', '5-194899-C-3.wav', '3-144827-B-11.wav', '5-253534-A-26.wav', '1-115546-A-48.wav', '2-120333-A-32.wav', '1-49409-A-8.wav', '5-217158-A-0.wav', '3-141240-A-44.wav', '1-223162-A-25.wav', '3-151212-A-24.wav', '3-108160-A-23.wav', '4-180337-A-28.wav', '1-21896-A-35.wav', '3-107123-A-26.wav', '2-123896-A-24.wav', '1-23094-B-15.wav', '5-198411-D-20.wav', '4-204830-A-6.wav', '1-26177-A-43.wav', '1-18074-A-6.wav', '2-60180-A-49.wav', '2-76408-C-22.wav', '1-20133-A-39.wav', '4-154443-A-24.wav', '5-179496-A-16.wav', '4-175000-C-40.wav', '5-189237-A-12.wav', '4-191297-A-28.wav', '5-221878-A-34.wav', '1-60997-B-20.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('4-210593-A-29.wav', '3-129678-A-13.wav', '3-142005-A-10.wav', '1-91359-B-11.wav', '2-95567-A-23.wav', '5-214362-A-17.wav', '5-209833-A-38.wav', '2-140147-A-38.wav', '2-76868-A-6.wav', '2-120587-A-6.wav', '3-117883-A-37.wav', '3-103051-B-19.wav', '4-167077-C-20.wav', '1-43807-B-47.wav', '2-114254-A-30.wav', '5-215005-A-32.wav', '4-99644-A-4.wav', '2-182508-B-8.wav', '4-164859-A-1.wav', '3-143933-A-38.wav', '2-122820-B-36.wav', '2-118459-B-32.wav', '2-104105-B-19.wav', '4-223127-A-14.wav', '3-111102-B-46.wav', '4-161519-A-19.wav', '1-17295-A-29.wav', '1-44831-A-1.wav', '3-144106-A-32.wav', '4-166661-A-10.wav', '3-203371-A-39.wav', '2-182508-A-8.wav')] 3
[tensor([[[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.]]]), tensor([44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100, 44100,
        44100, 44100]), ('5-178997-A-24.wav', '5-198411-B-20.wav', '5-250258-A-49.wav', '1-26222-A-10.wav', '1-172649-D-40.wav', '3-94343-A-25.wav', '2-160888-A-47.wav', '4-193480-A-40.wav', '4-145006-A-18.wav', '3-140199-A-8.wav', '2-96654-A-47.wav', '3-119455-A-44.wav', '1-39901-B-11.wav', '1-54065-A-45.wav', '3-118657-A-41.wav', '5-198411-D-20.wav', '2-109231-C-9.wav', '1-60997-B-20.wav', '2-59566-A-46.wav', '4-119648-D-48.wav', '3-171041-A-38.wav', '3-132747-A-26.wav', '5-253094-C-49.wav', '2-182508-B-8.wav', '3-156558-A-21.wav', '1-76831-A-42.wav', '2-87780-A-33.wav', '5-204352-B-13.wav', '5-215447-A-47.wav', '5-179865-A-43.wav', '5-9032-A-0.wav', '1-51805-C-33.wav')] 3
Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 93, in <module>
    train_model(config)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 54, in train_model
    for batch in train_loader:
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 733, in __next__
    data = self._next_data()
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 789, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/data/dataset.py", line 21, in __getitem__
    waveform = self.transform(waveform)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/data/preprocessing.py", line 61, in func
    data = torch.nn.functional.softmax(data, dim=0)
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/nn/functional.py", line 2140, in softmax
    ret = input.softmax(dim)
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 93, in <module>
    train_model(config)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 54, in train_model
    for batch in train_loader:
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 733, in __next__
    data = self._next_data()
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 789, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/data/dataset.py", line 21, in __getitem__
    waveform = self.transform(waveform)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/data/preprocessing.py", line 61, in func
    data = torch.nn.functional.softmax(data, dim=0)
  File "/home/amarjay/.local/lib/python3.10/site-packages/torch/nn/functional.py", line 2140, in softmax
    ret = input.softmax(dim)
KeyboardInterrupt
