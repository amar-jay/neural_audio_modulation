Input dimension changed from 64 to 11 due to positional encoding.
encoder_dims: [64, 32, 16, 8], decoder_dims: [8, 16, 32, 64]
Epoch 1: 0it [00:00, ?it/s]/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py:92: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).


orig_shape: torch.Size([8, 1, 220500, 1]), out shape: 11, embedded shape: torch.Size([1764000, 11])
embedded shape after reshape: torch.Size([8, 1, 220500, 11])
  audio_input = torch.tensor(batch[0], device=device)


orig_shape: torch.Size([8, 1, 220500, 1]), out shape: 11, embedded shape: torch.Size([1764000, 11])
embedded shape after reshape: torch.Size([8, 1, 220500, 11])
Epoch 1: 0it [00:00, ?it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 109, in <module>
    train_model(config)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 84, in train_model
    evaluate_model(model.encoded, model.decoded, train_loader, cross_entropy_loss=loss)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 97, in evaluate_model
    metrics = calculate_metrics(audio_input, decoded)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/utils/metrics.py", line 51, in calculate_metrics
    snr = signal_to_noise_ratio(original, compressed)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/utils/metrics.py", line 12, in signal_to_noise_ratio
    noise = original - compressed
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 109, in <module>
    train_model(config)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 84, in train_model
    evaluate_model(model.encoded, model.decoded, train_loader, cross_entropy_loss=loss)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/training/train.py", line 97, in evaluate_model
    metrics = calculate_metrics(audio_input, decoded)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/utils/metrics.py", line 51, in calculate_metrics
    snr = signal_to_noise_ratio(original, compressed)
  File "/home/amarjay/Desktop/code/neural_audio_modulation/neural_audio_modulation/src/utils/metrics.py", line 12, in signal_to_noise_ratio
    noise = original - compressed
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.
